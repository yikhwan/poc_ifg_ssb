{
  "job_name" : "ifg_main_stream",
  "api_endpoints" : [ ],
  "sql" : "insert into ifg_kafka_mainstream\r\nselect\r\nupper(edb.pk_composite_key) as pk_composite_key, -- HEADER ORACLE --\r\nedb.legal_entity_id as h_legal_entity_id,\r\n(SELECT DISTINCT LEDGER_ID FROM t_ifg_ledger) as h_ledger_id,\r\n    tmap.APPLICATION_ID as h_application_id,\r\nedb.request_id as h_request_id,\r\nupper(edb.application_name) as h_application_name,\r\n\tupper(tmap.APPLICATION_NAME) as h_application_name_ebs,\r\nupper(edb.event_model_code) as h_event_model_code,\r\nupper(edb.event_model_name) as h_event_model_name,\r\n    upper(tmap.ENTITY_NAME) as h_event_model_name_ebs,\r\nupper(edb.event_class_code) as h_event_class_code,\r\n\tupper(tmap.EVET_CLASS_NAME) as h_event_class_name,\r\nupper(edb.event_type_code) as h_event_type_code,\r\n\tupper(tmap.EVENT_TYPE_NAME) as h_event_type_name,\r\nedb.trx_id as h_trx_id,\r\nedb.trx_num as h_trx_num,\r\nedb.trx_source_description as h_trx_source_description,\r\nedb.trx_date as h_trx_date,\r\nedb.gl_date as h_gl_date,\r\nedb.trx_ref_id as h_trx_ref_id,\r\nedb.currency_code as h_currency_code,\r\nedb.exchange_rate_type as h_exchange_rate_type,\r\nedb.exchange_date as h_exchange_date,\r\nedb.exchange_rate as h_exchange_rate,\r\nedb.biaya_adm as h_biaya_adm,\r\nedb.lebih_bayar as h_lebih_bayar,\r\nedb.no_kontrak as h_no_kontrak,\r\nedb.no_polis as h_no_polis,\r\nedb.produk as h_produk,\r\nedb.no_claim as h_no_claim,\r\nedb.bukti_pembayaran as h_bukti_pembayaran,\r\nedb.bukti_penerimaan as h_bukti_penerimaan,\r\nedb.attribute7 as h_jenisnya,\r\nedb.attribute8 as h_bayar_tenor,\r\nedb.attribute10 as h_cara_bayar,\r\nedb.attribute11 as h_migrasi,\r\nedb.attribute13 as h_jenis_klaim,\r\nedb.attribute14 as h_nama_peserta,\r\nedb.attribute15 as h_no_desisi,\r\nedb.attribute16 as h_no_mutasi,\r\nedb.created_by as h_created_by,\r\nedb.creation_date as h_creation_date,\r\nedb.last_updated_by as h_last_updated_by,\r\nedb.last_update_date as h_last_update_date,\r\nedb.process_flag as h_process_flag,\r\nedb.line_number as l_line_number, -- LINES ORACLE --\r\nedb.line_type as l_line_type,\r\nedb.applied_to_trx_id as l_applied_to_trx_id,\r\nedb.applied_to_trx_num as l_applied_to_trx_num,\r\nedb.entitas as l_entitas_edb, --> segment1\r\n    COALESCE(v1.OUTPUT_VALUE,edb.entitas) as l_entitas_ebs,\r\nedb.cabang as l_cabang_edb, --> segment2\r\n    COALESCE(v2.OUTPUT_VALUE,edb.cabang) as l_cabang_ebs,\r\nedb.cost_center as l_cost_center_edb, --> segment3\r\n    COALESCE(v3.OUTPUT_VALUE,edb.cost_center) as l_cost_center_ebs,\r\nedb.nat_account_efin as l_nat_account_efin_edb, --> segment4\r\n    COALESCE(v4.OUTPUT_VALUE,edb.nat_account_efin) as l_nat_account_efin_ebs,\r\nedb.bank_invest as l_bank_invest_edb , --> segment5\r\n    COALESCE(v5.OUTPUT_VALUE,edb.bank_invest) as l_bank_invest_ebs,\r\nedb.lob_produk as l_lob_produk_edb, --> segment6\r\n\tCOALESCE(v6.OUTPUT_VALUE,edb.lob_produk) as l_lob_produk_ebs,\r\nedb.channel as l_channel_edb, --> segment7\r\n    COALESCE(v7.OUTPUT_VALUE,edb.channel) as l_channel_ebs,\r\nedb.program_kerja as l_program_kerja_edb, --> segment8\r\n    COALESCE(v8.OUTPUT_VALUE,edb.program_kerja) as l_program_kerja_ebs,\r\nedb.intercompany as l_intercompany_edb, --> segment9\r\n    COALESCE(v9.OUTPUT_VALUE,edb.intercompany) as l_intercompany_ebs,\r\nedb.future1 as l_future1_edb, --> segment10\r\n    COALESCE(v10.OUTPUT_VALUE,edb.future1) as l_future1_ebs,\r\nedb.future2 as l_future2_edb, --> segment11\r\n    COALESCE(v11.OUTPUT_VALUE,edb.future2) as l_future2_ebs,\r\nedb.future3 as l_future3_edb, --> segment12\r\n    COALESCE(v12.OUTPUT_VALUE,edb.future3) as l_future3_ebs,\r\nedb.amount as l_amount,\r\nedb.base_amount as l_base_amount,\r\nedb.line_description as l_line_description,\r\nedb.no_kontrak as l_no_kontrak,\r\nedb.no_polis as l_no_polis,\r\nedb.produk as l_produk,\r\nedb.no_claim as l_no_claim,\r\nedb.attribute9 as l_jenis_klaim_invest,\r\nedb.attribute12 as l_nama_bank,\r\nedb.attribute13 as l_jenis_klaim,\r\nedb.attribute17 as l_interco,\r\nedb.attribute18 as l_jns_trans_reasuransi,\r\nedb.attribute19 as l_sektor_usaha,\r\nedb.attribute20 as l_sektor_mitra,\r\nedb.attribute21 as l_wilayah,\r\nedb.attribute22 as l_kode_rayon,\r\nedb.attribute23 as l_wni,\r\nedb.attribute24 as l_attribute24,\r\nedb.attribute25 as l_attribute25,\r\nedb.attribute26 as l_attribute26,\r\nedb.attribute27 as l_attribute27,\r\nedb.attribute28 as l_attribute28,\r\nedb.attribute29 as l_attribute29,\r\nedb.attribute30 as l_attribute30,\r\nedb.created_by as l_created_by,\r\nedb.creation_date as l_creation_date,\r\nedb.last_updated_by as l_last_updated_by,\r\nedb.last_update_date as l_last_update_date,\r\nedb.last_update_date as l_etl_date,\r\nedb.process_flag as l_process_flag,\r\n\tCASE ------------------------------------------------------------- ERROR MESSAGE ----------------------------------\r\n        WHEN COALESCE(v1.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT1' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v1.OUTPUT_VALUE,'SEGMENT 1 with INPUT_VALUE=' || edb.entitas || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_1,\r\n\tCASE\r\n        WHEN COALESCE(v2.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT2' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v2.OUTPUT_VALUE,'SEGMENT 2 with INPUT_VALUE=' || edb.cabang || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_2,\r\n\tCASE\r\n        WHEN COALESCE(v3.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT3' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v3.OUTPUT_VALUE,'SEGMENT 3 with INPUT_VALUE=' || edb.cost_center || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_3,\r\n\tCASE\r\n        WHEN COALESCE(v4.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT4' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v4.OUTPUT_VALUE,'SEGMENT 4 with INPUT_VALUE=' || edb.nat_account_efin || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_4,\r\n\tCASE\r\n        WHEN COALESCE(v5.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT5' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v5.OUTPUT_VALUE,'SEGMENT 5 with INPUT_VALUE=' || edb.bank_invest || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_5,\r\n\tCASE\r\n        WHEN COALESCE(v6.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT6' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v6.OUTPUT_VALUE,'SEGMENT 6 with INPUT_VALUE=' || edb.lob_produk || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_6,\r\n\tCASE\r\n        WHEN COALESCE(v7.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT7' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v7.OUTPUT_VALUE,'SEGMENT 7 with INPUT_VALUE=' || edb.channel || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_7,\r\n\tCASE\r\n        WHEN COALESCE(v8.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT8' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v8.OUTPUT_VALUE,'SEGMENT 8 with INPUT_VALUE=' || edb.program_kerja || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_8,\r\n\tCASE\r\n        WHEN COALESCE(v9.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT9' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v9.OUTPUT_VALUE,'SEGMENT 9 with INPUT_VALUE=' || edb.intercompany || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_9,\r\n\tCASE\r\n        WHEN COALESCE(v10.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT10' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v10.OUTPUT_VALUE,'SEGMENT 10 with INPUT_VALUE=' || edb.future1 || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_10,\r\n\tCASE\r\n        WHEN COALESCE(v11.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT11' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v11.OUTPUT_VALUE,'SEGMENT 11 with INPUT_VALUE=' || edb.future2 || ' has NO OUTPUT value. ')\r\n            END\r\n    END AS err_message_11,\t\r\n\tCASE\r\n        WHEN COALESCE(v12.OUTPUT_VALUE) IS NULL THEN\r\n            CASE\r\n                WHEN (select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT12' and ENABLED_FLAG='Y')>1 THEN\r\n                COALESCE(v12.OUTPUT_VALUE,'Segment 12 with INPUT_VALUE=' || edb.future3|| ' has no output value. ')\r\n            END\r\n    END AS err_message_12,\r\n\tCASE ------------------------------------------------------------- STATUS ----------------------------------------------------------\r\n        WHEN\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT1' and ENABLED_FLAG='Y')>1 AND v1.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT2' and ENABLED_FLAG='Y')>1 AND v2.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT3' and ENABLED_FLAG='Y')>1 AND v3.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT4' and ENABLED_FLAG='Y')>1 AND v4.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT5' and ENABLED_FLAG='Y')>1 AND v5.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT6' and ENABLED_FLAG='Y')>1 AND v6.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT7' and ENABLED_FLAG='Y')>1 AND v7.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT8' and ENABLED_FLAG='Y')>1 AND v8.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT9' and ENABLED_FLAG='Y')>1 AND v9.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT10' and ENABLED_FLAG='Y')>1 AND v10.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT11' and ENABLED_FLAG='Y')>1 AND v11.OUTPUT_VALUE IS NULL OR\r\n\t\t(select count(0) from t_fah_coa_mapping where SEGMENT_CODE='SEGMENT12' and ENABLED_FLAG='Y')>1 AND v12.OUTPUT_VALUE IS NULL\r\n\t\tTHEN 'E'\r\n        ELSE NULL\r\n\tEND AS XLA_STATUS,\r\n(SELECT DISTINCT `NAME` as ledger_name FROM t_ifg_ledger) AS h_ledger_name\r\nfrom\r\n\tt_event_db edb\r\nleft join t_fah_event_mapping_v tmap\r\non\r\n\tUPPER(trim(edb.application_name)) = UPPER(trim(tmap.APPLICATION_SHORT_NAME))\r\n\tand UPPER(trim(edb.event_model_code)) = UPPER(trim(tmap.ENTITY_CODE))\r\n\tand UPPER(trim(edb.event_class_code)) = UPPER(trim(tmap.EVENT_CLASS_CODE))\r\n\tand UPPER(trim(edb.event_type_code)) = UPPER(TRIM(tmap.EVENT_TYPE_CODE))\r\n    and tmap.ENABLED_FLAG = 'Y'\r\nleft join t_fah_coa_mapping v1\r\non \r\n    UPPER(TRIM(edb.entitas)) = UPPER(TRIM(v1.INPUT_VALUE))\r\n    and v1.SEGMENT_CODE = 'SEGMENT1' AND v1.ENABLED_FLAG = 'Y'\r\nleft join t_fah_coa_mapping v2\r\non \r\n    UPPER(TRIM(edb.cabang)) = UPPER(TRIM(v2.INPUT_VALUE))\r\n    and v2.SEGMENT_CODE = 'SEGMENT2' AND v2.ENABLED_FLAG = 'Y'\r\nleft join t_fah_coa_mapping v3\r\non \r\n    UPPER(TRIM(edb.cost_center)) = UPPER(TRIM(v3.INPUT_VALUE))\r\n    and v3.SEGMENT_CODE = 'SEGMENT3' AND v3.ENABLED_FLAG = 'Y'\r\nleft join t_fah_coa_mapping v4\r\non \r\n    UPPER(TRIM(edb.nat_account_efin)) = UPPER(TRIM(v4.INPUT_VALUE))\r\n    and v4.SEGMENT_CODE = 'SEGMENT4' AND v4.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v5\r\non \r\n    UPPER(TRIM(edb.bank_invest)) = UPPER(TRIM(v5.INPUT_VALUE))\r\n    and v5.SEGMENT_CODE = 'SEGMENT5' AND v5.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v6\r\non \r\n    UPPER(TRIM(edb.lob_produk)) = UPPER(TRIM(v6.INPUT_VALUE))\r\n    and v6.SEGMENT_CODE = 'SEGMENT6' AND v6.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v7\r\non\r\n    UPPER(TRIM(edb.channel)) = UPPER(TRIM(v7.INPUT_VALUE))\r\n    and v7.SEGMENT_CODE = 'SEGMENT7' AND v7.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v8\r\non\r\n    UPPER(TRIM(edb.program_kerja)) = UPPER(TRIM(v8.INPUT_VALUE))\r\n    and v8.SEGMENT_CODE = 'SEGMENT8' AND v8.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v9\r\non\r\n    UPPER(TRIM(edb.intercompany)) = UPPER(TRIM(v9.INPUT_VALUE))\r\n    and v9.SEGMENT_CODE = 'SEGMENT9' AND v9.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v10\r\non\r\n    UPPER(TRIM(edb.future1)) = UPPER(TRIM(v10.INPUT_VALUE))\r\n    and v10.SEGMENT_CODE = 'SEGMENT10' AND v10.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v11\r\non\r\n    UPPER(TRIM(edb.future2)) = UPPER(TRIM(v11.INPUT_VALUE))\r\n    and v11.SEGMENT_CODE = 'SEGMENT11' AND v11.ENABLED_FLAG = 'Y'    \r\nleft join t_fah_coa_mapping v12\r\non\r\n    UPPER(TRIM(edb.future3)) = UPPER(TRIM(v12.INPUT_VALUE))\r\n    and v12.SEGMENT_CODE = 'SEGMENT12' AND v12.ENABLED_FLAG = 'Y'",
  "mv_config" : {
    "name" : "ifg_main_stream",
    "retention" : 300,
    "min_row_retention_count" : 0,
    "recreate" : false,
    "key_column_name" : null,
    "column_indices_disabled" : false,
    "indexed_columns" : [ ],
    "not_indexed_columns" : [ ],
    "api_key" : null,
    "ignore_nulls" : false,
    "require_restart" : false,
    "batch_size" : 0,
    "enabled" : false
  },
  "runtime_config" : {
    "execution_mode" : "PER_JOB",
    "parallelism" : 1,
    "sample_interval" : 0,
    "sample_count" : 0,
    "window_size" : 0,
    "start_with_savepoint" : false,
    "log_config" : {
      "type" : "LOG4J_PROPERTIES",
      "content" : "\nrootLogger.level = INFO\nrootLogger.appenderRef.file.ref = MainAppender\n#Uncomment this if you want to _only_ change Flink's logging\n#logger.flink.name = org.apache.flink\n#logger.flink.level = INFO\n\n# The following lines keep the log level of common libraries/connectors on\n# log level INFO. The root logger does not override this. You have to manually\n# change the log levels here.\nlogger.akka.name = akka\nlogger.akka.level = INFO\nlogger.kafka.name= org.apache.kafka\nlogger.kafka.level = INFO\nlogger.hadoop.name = org.apache.hadoop\nlogger.hadoop.level = INFO\nlogger.zookeeper.name = org.apache.zookeeper\nlogger.zookeeper.level = INFO\n\n# Log all infos in the given file\nappender.main.name = MainAppender\nappender.main.type = File\nappender.main.append = false\nappender.main.fileName = /var/log/ssb\nappender.main.layout.type = PatternLayout\nappender.main.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n\n# Suppress the irrelevant (wrong) warnings from the Netty channel handler\nlogger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline\nlogger.netty.level = OFF\n"
    }
  }
}